use strum_macros::EnumIter;

#[derive(EnumIter, PartialEq, Clone, Copy, Debug, Hash, Eq)]
pub enum AspectClass {
    Strong,
    Hardy, 
    DevelopedFeelings, 
    Sturdy, 
    SlowMetabolism, 
    Large,
    Resilient,
    FastAndAgile,
    Fertile,
    Smart,
    ChildrenOfBiome,
    Generous,
    Loyal,
    Charming,
    Fearless,
    Adaptive,
    ReligiousFanatics,
    Stockpiles,
    CultOfPower,
    Talented,
    FormidableHorsemen,
    RichMilitaryTraditions,
    Hardworking,
    MultipleCarryover,
    HighlyDevelopedMagic,
    NoMagic,
    HighlyDevelopedTechnologies,
    NoTechnology,
    HomoSapiens,
    HighestCaste,
    Flying,
    NoNeedForFood,
    Subdivision,
    HiveMind,
    Symbiosis,
    NaturalWeapons,
    InnateAbilities,
    StrangeWorld,
}

#[derive(PartialEq, Clone)]
pub struct Aspect {
    pub class: AspectClass,
    pub name: String,
    pub description: String,
    pub cost: i32,
    pub have_cost: bool,
    pub is_negative: bool,
    pub can_be_negative: bool,
}

impl Aspect {
    pub fn get_class_default(aspect: AspectClass) -> Self {
        match aspect {
            AspectClass::Strong => Aspect{
                class: aspect,
                name: "Сильные".to_string(),
                description: "Обладая внушительной физической мощью, представители этой расы значительно превосходят физические способности Эталона".to_string(),
                cost: 1,
                have_cost: true,
                is_negative: false,
                can_be_negative: true,
            },
            AspectClass::Hardy => Aspect{
                class: aspect,
                name: "Выносливые".to_string(),
                description: "Эти существа обладают поразительной стойкостью, превосходя Эталона, что позволяет им бороться и трудиться дольше, чем другие".to_string(),
                cost: 1,
                have_cost: true,
                is_negative: false,
                can_be_negative: true,
            },
            AspectClass::DevelopedFeelings => Aspect{
                class: aspect,
                name: "Развитые чувства".to_string(),
                description: "Их острота зрения, слуха и обоняния позволяет им легко различать детали окружающего мира. Они видят/слышат/чуют значительно лучше Эталона".to_string(),
                cost: 1,
                have_cost: true,
                is_negative: false,
                can_be_negative: true,
            },
            AspectClass::Sturdy => Aspect{
                class: aspect,
                name: "Крепкие".to_string(),
                description: "Устойчивость к внешним воздействиям у этих существ значительно выше, чем у Эталона, что позволяет их коже или покрытию противостоять различным опасностям".to_string(),
                cost: 1,
                have_cost: true,
                is_negative: false,
                can_be_negative: true,
            },
            AspectClass::SlowMetabolism => Aspect{
                class: aspect,
                name: "Замедленный метаболизм".to_string(),
                description: "Потребление пищи у этих существ на 50% меньше, чем у Эталона, что делает их более экономичными и приспособленными к условиям недостатка ресурсов".to_string(),
                cost: 1,
                have_cost: true,
                is_negative: false,
                can_be_negative: true,
            },
            AspectClass::Large => Aspect{
                class: aspect,
                name: "Крупные".to_string(),
                description: "Размеры этих существ значительно превосходят Эталон (3-4 метра в высоту), что добавляет им грандиозности и внушительности. Размеры напрямую влияют на силу существ. В качестве недостатка, их рост может составлять 0,5-1 метра".to_string(),
                cost: 2,
                have_cost: true,
                is_negative: false,
                can_be_negative: true,
            },
            AspectClass::Resilient => Aspect{
                class: aspect,
                name: "Живучие".to_string(),
                description: "Благодаря усиленной регенерации тканей, эти существа восстанавливают утраченные конечности (кроме головы) и заживляют раны за несколько минут".to_string(),
                cost: 2,
                have_cost: true,
                is_negative: false,
                can_be_negative: true,
            },
            AspectClass::FastAndAgile => Aspect{
                class: aspect,
                name: "Быстрые и ловкие".to_string(),
                description: "Отличаются сногсшибательной скоростью и координацией движений, что ставит их на ступень выше Эталона в маневренности".to_string(),
                cost: 2,
                have_cost: true,
                is_negative: false,
                can_be_negative: true,
            },
            AspectClass::Fertile => Aspect{
                class: aspect,
                name: "Плодовитые".to_string(),
                description: "Эта раса характеризуется быстрым приростом населения (Прирост населения с каждых 9, а не 10 Населения), что дает им численное преимущество и способность быстро восстанавливаться после потерь".to_string(),
                cost: 2,
                have_cost: true,
                is_negative: false,
                can_be_negative: true,
            },
            AspectClass::Smart => Aspect{
                class: aspect,
                name: "Умные".to_string(),
                description: "Быстрые и точные решения, а также более успешное проведения реформ, развития наук и магии, выделяют эту расу среди других".to_string(),
                cost: 2,
                have_cost: true,
                is_negative: false,
                can_be_negative: true,
            },
            AspectClass::ChildrenOfBiome => Aspect{
                class: aspect,
                name: "Дети биома".to_string(),
                description: "Эта раса получает преимущества, когда находится на определенном типе местности, что делает их более сильными и адаптированными к своему родному окружению. В случае взятия как недостатка, существа терпят штрафы, когда оказываются в непривычной среде и вдали от своего родного биома".to_string(),
                cost: 0,
                have_cost: false,
                is_negative: false,
                can_be_negative: false,
            },
            AspectClass::Generous => Aspect{
                class: aspect,
                name: "Щедрые".to_string(),
                description: "Каждое население платит в качестве налогов на 2 золота больше. Эта культурная черта характеризует народ, который добровольно и охотно делится своим достатком, привлекая к себе торговцев и наемников своей непринужденной щедростью".to_string(),
                cost: 1,
                have_cost: true,
                is_negative: false,
                can_be_negative: true,
            },
            AspectClass::Loyal => Aspect{
                class: aspect,
                name: "Лояльные".to_string(),
                description: "Народы с этой чертой надежны и преданны своему государству. Они с трудом поддаются вербовке и редко участвуют во восстаниях или политических интригах".to_string(),
                cost: 1,
                have_cost: true,
                is_negative: false,
                can_be_negative: true,
            },
            AspectClass::Charming => Aspect{
                class: aspect,
                name: "Обаятельные".to_string(),
                description: "Обаяние этой расы делает их привлекательными и позволяет им легче находить общий язык с другими".to_string(),
                cost: 1,
                have_cost: true,
                is_negative: false,
                can_be_negative: true,
            },
            AspectClass::Fearless => Aspect{
                class: aspect,
                name: "Бесстрашные".to_string(),
                description: "Народы с этой чертой не знают страха, что делает их отважными в битвах и смелыми перед лицом опасности".to_string(),
                cost: 1,
                have_cost: true,
                is_negative: false,
                can_be_negative: true,
            },
            AspectClass::Adaptive => Aspect{
                class: aspect,
                name: "Адаптивные".to_string(),
                description: "Такие культуры быстро приспосабливаются к переменам, угрозам и невзгодам, что позволяет им выжить и процветать в сложных условиях".to_string(),
                cost: 1,
                have_cost: true,
                is_negative: false,
                can_be_negative: true,
            },
            AspectClass::ReligiousFanatics => Aspect{
                class: aspect,
                name: "Религиозные фанатики".to_string(),
                description: "Эта черта связывает общество с определенной верой, сплачивая народ против внешнего мира. В качестве негативного аспекта общество сосредотачивается на поиске внутренних врагов и еретиков".to_string(),
                cost: 1,
                have_cost: true,
                is_negative: false,
                can_be_negative: true,
            },
            AspectClass::Stockpiles => Aspect{
                class: aspect,
                name: "Запасливые".to_string(),
                description: "На старте у вас в два раза больше всех ресурсов. В случае взятия как недостаток, вы начинаете без ресурсов".to_string(),
                cost: 1,
                have_cost: true,
                is_negative: false,
                can_be_negative: true,
            },
            AspectClass::CultOfPower => Aspect{
                class: aspect,
                name: "Культ силы".to_string(),
                description: "В таких культурах поощряется физическая сила и стремление стать воином, что способствует развитию мощной военной машины и способности к самообороне".to_string(),
                cost: 1,
                have_cost: true,
                is_negative: false,
                can_be_negative: true,
            },
            AspectClass::Talented => Aspect{
                class: aspect,
                name: "Талантливые воины/политики/управленцы".to_string(),
                description: "Народы с этой чертой имеют увеличенный на 2 стартовый прирост военных, политических или экономических фрагментов, что способствует их ускоренному прогрессу в соответствующих сферах. Вы также получаете небольшие бонусы к способностям выбранного типа специалистов".to_string(),
                cost: 1,
                have_cost: true,
                is_negative: false,
                can_be_negative: true,
            },
            AspectClass::FormidableHorsemen => Aspect{
                class: aspect,
                name: "Жизнь в седле".to_string(),
                description: "Ваша раса живет душа в душу с видом животных, пригодных для верховой езды. Если ваша раса - это естественная кавалерия (например, кентавры) - вы обязаны взять этот аспект как бонус. Взятие в качестве недостатка означает, что особенности вашей расы или культуры не позволяют использовать кавалерию".to_string(),
                cost: 1,
                have_cost: true,
                is_negative: false,
                can_be_negative: true,
            },
            AspectClass::RichMilitaryTraditions => Aspect{
                class: aspect,
                name: "Богатые военные традиции".to_string(),
                description: "Ваша культура славится тактическим разнообразием и умением эффективно использовать самые разные виды войск. На старте число военных традиций увеличено на 2".to_string(),
                cost: 1,
                have_cost: true,
                is_negative: false,
                can_be_negative: true,
            },
            AspectClass::Hardworking => Aspect{
                class: aspect,
                name: "Трудолюбивые".to_string(),
                description: " Для функционирования игровых построек (кроме крепости) требуется на 1 меньше Населения, что позволяет им эффективнее добывать ресурсы и сосредотачиваться на других аспектах жизни".to_string(),
                cost: 2,
                have_cost: true,
                is_negative: false,
                can_be_negative: true,
            },
            AspectClass::MultipleCarryover => Aspect{
                class: aspect,
                name: "Многочисленный перенос".to_string(),
                description: "Стартовое население увеличено на 4, что способствует быстрому росту и расширению".to_string(),
                cost: 2,
                have_cost: true,
                is_negative: false,
                can_be_negative: true,
            },
            AspectClass::HighlyDevelopedMagic => Aspect{
                class: aspect,
                name: "Высокоразвитая магия".to_string(),
                description: "Цивилизации с этой чертой активно используют магию в своей жизни, чтобы компенсировать отсутствие высоких технологий. Могут полагаться на нее при выдаче приказов и реформ".to_string(),
                cost: 3,
                have_cost: true,
                is_negative: false,
                can_be_negative: false,
            },
            AspectClass::NoMagic => Aspect{
                class: aspect,
                name: "Без магии".to_string(),
                description: "Такие расы не могут использовать магию вообще, в том числе магические артефакты и технологии".to_string(),
                cost: -1,
                have_cost: true,
                is_negative: false,
                can_be_negative: false,
            },
            AspectClass::HighlyDevelopedTechnologies => Aspect{
                class: aspect,
                name: "Высокоразвитые технологии".to_string(),
                description: "Уровень развития таких цивилизаций соответствует концу XVIII века на Земле, что обеспечивает им преимущества в различных аспектах жизни".to_string(),
                cost: 3,
                have_cost: true,
                is_negative: false,
                can_be_negative: false,
            },
            AspectClass::NoTechnology => Aspect{
                class: aspect,
                name: "Без технологий".to_string(),
                description: "Эти народы оказываются на стадии раннего бронзового века, что сильно ограничивает их возможности".to_string(),
                cost: -1,
                have_cost: true,
                is_negative: false,
                can_be_negative: false,
            },
            AspectClass::HomoSapiens => Aspect{
                    class: aspect,
                    name: "Homo sapiens".to_string(),
                    description: "Ваша раса настолько уникальна и непохожа на другие. Это считается недостатком, так как запрещает использование каких-либо аспектов, кроме культурных".to_string(),
                    cost: -1,
                    have_cost: true,
                    is_negative: false,
                    can_be_negative: false,
                },
            AspectClass::HighestCaste => Aspect{
                    class: aspect,
                    name: "Высшая каста".to_string(),
                    description: "В вашем обществе существует каста особо одаренных существ (это может быть как представители или подвид вашей расы, так и отдельная раса). Их слишком мало, чтобы они могли влияли на экономику или войну, однако они могут выразить желание помочь как специалисты. Игрок может также указать, что правитель страны также относится к этой касте, получив на старте аспект \"Правитель из Высшей касты\". Высокие требования к концепту".to_string(),
                    cost: 1,
                    have_cost: true,
                    is_negative: false,
                    can_be_negative: false,
                },
            AspectClass::Flying => Aspect{
                    class: aspect,
                    name: "Летающие".to_string(),
                    description: "Ваша раса способна на кратковременное быстрое перемещение по воздуху. Отряды с аспектом \"Летающие\" обладают повышенной мобильностью и могут игнорировать свойства одного гекса на своем пути за одно перемещение".to_string(),
                    cost: 2,
                    have_cost: true,
                    is_negative: false,
                    can_be_negative: false,
                },
            AspectClass::NoNeedForFood => Aspect{
                    class: aspect,
                    name: "Не нуждаются в еде".to_string(),
                    description: "Ваша раса не потребляет пищу, и вы начинаете игру без запасов еды. Нельзя выбрать аспекты \"Запасливые\" и \"Замедленный метаболизм\"".to_string(),
                    cost: 3,
                    have_cost: true,
                    is_negative: false,
                    can_be_negative: false,
                },
            AspectClass::Subdivision => Aspect{
                    class: aspect,
                    name: "Подчинение".to_string(),
                    description: "Ваша цивилизация основана на эксплуатации одной расой другой. Стартовое население увеличено до 20 (по 10 на каждую расу). Основная раса получает аспект \"Владыки\"(3), подчиненная - аспект \"Подчиненные\"(0). Поселения и крепости заселяются Владыками, фермы, лагеря и шахты - Подчиненными. У угнетенной расы может быть не больше 3 аспектов, включая \"Подчинение\". Стоимость аспекта \"Лояльные\" для угнетенной расы и аспекта \"Обаятельные\" для доминирующей расы увеличивается до 2 очков. Нельзя брать аспекты \"Многочисленный перенос\" и \"Запасливые\"".to_string(),
                    cost: 3,
                    have_cost: true,
                    is_negative: false,
                    can_be_negative: false,
                },
            AspectClass::HiveMind => Aspect{
                    class: aspect,
                    name: "Коллективный разум".to_string(),
                    description: "Ваша раса обладает коллективным сознанием, исключающим индивидуальное мышление и проблемы с выполнением приказов. Центр принятия решений должен присутствовать на поле боя. Нельзя выбрать аспекты \"Щедрые\", \"Лояльные\", \"Бесстрашные\" и \"Религиозные фанатики\". Требования к концепту расы повышены".to_string(),
                    cost: 5,
                    have_cost: true,
                    is_negative: false,
                    can_be_negative: false,
                },
            AspectClass::Symbiosis => Aspect{
                    class: aspect,
                    name: "Симбиоз".to_string(),
                    description: "Ваша цивилизация основана на сотрудничестве двух рас. Обе расы получают аспект \"Симбиоз\". У каждой расы может быть не больше 4 аспектов, включая \"Симбиоз\".  Нельзя брать аспект \"Трудолюбивые\". Требования к концепту рас повышены".to_string(),
                    cost: 0,
                    have_cost: false,
                    is_negative: false,
                    can_be_negative: false,
                },
            AspectClass::NaturalWeapons => Aspect{
                    class: aspect,
                    name: "Естественное оружие".to_string(),
                    description: "Ваша раса может эффективно сражаться без использования доспехов и оружия благодаря своим естественным особенностям (наприме".to_string(),
                    cost: 0,
                    have_cost: false,
                    is_negative: false,
                    can_be_negative: false,
                },
            AspectClass::InnateAbilities => Aspect{
                    class: aspect,
                    name: "Врожденные способности".to_string(),
                    description: "Ваша раса способна использовать магию или сопоставимые способности в определенных ограниченных пределах без обучения, ингредиентов и инструментов".to_string(),
                    cost: 0,
                    have_cost: false,
                    is_negative: false,
                    can_be_negative: false,
                },
            AspectClass::StrangeWorld => Aspect{
                    class: aspect,
                    name: "Чуждый мир".to_string(),
                    description: "Ваша раса сталкивается с серьезными проблемами при адаптации к новому миру, который сильно отличается от привычной среды обитания. Это может создать дополнительные сложности в процессе обживания и развития вашей цивилизации. Для адаптации вам нужно проводить целые реформы (наприме".to_string(),
                    cost: 0,
                    have_cost: false,
                    is_negative: false,
                    can_be_negative: false,
                }
        }
    }
}
